// <auto-generated />
using System;
using InfastructureProject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InfastructureProject.Migrations
{
    [DbContext(typeof(BinarySearchTreeContext))]
    partial class BinarySearchTreeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BinaryTree.EntitiesProject.Entities.Tree", b =>
                {
                    b.Property<int>("TreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LeftTreeId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("TreeId");

                    b.HasIndex("LeftTreeId")
                        .IsUnique()
                        .HasFilter("[LeftTreeId] IS NOT NULL");

                    b.ToTable("Tree");
                });

            modelBuilder.Entity("BinaryTree.EntitiesProject.Entities.Tree", b =>
                {
                    b.HasOne("BinaryTree.EntitiesProject.Entities.Tree", "Left")
                        .WithOne("Right")
                        .HasForeignKey("BinaryTree.EntitiesProject.Entities.Tree", "LeftTreeId");

                    b.Navigation("Left");
                });

            modelBuilder.Entity("BinaryTree.EntitiesProject.Entities.Tree", b =>
                {
                    b.Navigation("Right");
                });
#pragma warning restore 612, 618
        }
    }
}
